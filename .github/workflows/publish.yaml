name: publish
on:
  workflow_dispatch:
  release:
    types: [published]
defaults:
  run:
    shell: bash
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  push_to_registry:
    name: push / ${{ matrix.container }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: true
      matrix:
        container:
          - dnsmasq
          - nixos
          - pgbouncer
          - restic
          - restic-pg
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Get latest ${{ matrix.container }} tag
        id: tag
        run: |
          set -x
          tag=$(
            gh release list --repo "${{ github.repository }}" \
                --exclude-drafts --exclude-pre-releases \
                --json tagName -q '.[].tagName' |
              grep '${{ matrix.container }}-[0-9].[0-9].[0-9]' |
              sort --version-sort |
              tail -n 1 |
              sed -e 's/${{ matrix.container }}-//'
          )
          echo "version=$tag" >> "$GITHUB_OUTPUT"
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: joshuachp/${{ matrix.container }}
          tags: |
            type=raw,value=${{ steps.tag.outputs.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./${{ matrix.container }}
          file: ./${{ matrix.container }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


